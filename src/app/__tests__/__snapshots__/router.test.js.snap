// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Router /> matches snapshot 1`] = `
<BrowserRouter>
  <ToastContainer
    autoClose={5000}
    bodyClassName={null}
    className={null}
    closeButton={
      <CloseButton
        ariaLabel="close"
      />
    }
    closeOnClick={true}
    draggable={true}
    draggablePercent={80}
    hideProgressBar={false}
    newestOnTop={false}
    pauseOnFocusLoss={true}
    pauseOnHover={true}
    position="top-right"
    progressClassName={null}
    progressStyle={null}
    role="alert"
    rtl={false}
    style={null}
    toastClassName={null}
    transition={[Function]}
  />
  <Route
    component={[Function]}
    exact={true}
    path="/"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(LoginContainer)",
        "type": [Function],
      }
    }
    path="/login"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(LogoutContainer)",
        "type": [Function],
      }
    }
    path="/logout"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(ResetPassword)",
        "type": [Function],
      }
    }
    path="/password/reset"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(ResetPassword)",
        "type": [Function],
      }
    }
    path="/resetpassword/:token"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(SignupComponent)",
        "type": [Function],
      }
    }
    path="/signup"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(ArticleContainer)",
        "type": [Function],
      }
    }
    exact={true}
    path="/create"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(ProfileContainer)",
        "type": [Function],
      }
    }
    path="/profile"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(EditProfileContainer)",
        "type": [Function],
      }
    }
    path="/editprofile"
  />
  <Route
    component={[Function]}
    exact={true}
    path="/articles"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(Article)",
        "type": [Function],
      }
    }
    exact={true}
    path="/articles/:id"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(UpdateArticleContainer)",
        "type": [Function],
      }
    }
    path="/article/update"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(Search)",
        "type": [Function],
      }
    }
    exact={true}
    path="/search"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(UsersContainer)",
        "type": [Function],
      }
    }
    exact={true}
    path="/users"
  />
  <Route
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(FollowContainer)",
        "type": [Function],
      }
    }
    exact={true}
    path="/users/following/"
  />
</BrowserRouter>
`;
